from django.shortcuts import render, get_object_or_404
from .models import Post, Comment
from django.http import Http404
from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger
from django.views.generic import ListView
from .forms import EmailPostForm, CommentForm
from django.core.mail import send_mail
from django.views.decorators.http import require_POST


def post_detail(request, year, month, day, post):
    post = get_object_or_404(Post,
                             slug=post,
                             publish__year=year,
                             publish__month=month,
                             publish__day=day,
                             status=Post.Status.PUBLISHED)
    # –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ —ç—Ç–æ–º—É –ø–æ—Å—Ç—É
    comments = post.comments.filter(active=True)
    # –§–æ—Ä–º–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    form = CommentForm()

    return render(request,
                  'blog/post/detail.html',
                  {'post': post,
                   'comments': comments,
                   'form': form})

class PostListView(ListView):
    """
    –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ—Å—Ç–æ–≤
    """
    queryset = Post.published.all()
    context_object_name = 'posts'
    paginate_by = 3
    template_name = 'blog/post/list.html'


def post_list(request):
    post_list = Post.published.all()
    # –ü–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–∞—è —Ä–∞–∑–±–∏–≤–∫–∞ —Å 3 –ø–æ—Å—Ç–∞–º–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    paginator = Paginator(post_list, 3)
    page_number = request.GET.get('page', 1)
    try:
        posts = paginator.page(page_number)
    except PageNotAnInteger:
        # –ï—Å–ª–∏ page_number –Ω–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, —Ç–æ
        # –≤—ã–¥–∞—Ç—å –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        posts = paginator.page(1)
    except EmptyPage:
        # –ï—Å–ª–∏ page_number –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, —Ç–æ
        # –≤—ã–¥–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        posts = paginator.page(paginator.num_pages)
    return render(request,
                  'blog/post/list.html',
                  {'posts': posts})


def post_share(request, post_id):
    # –ò–∑–≤–ª–µ—á—å –ø–æ—Å—Ç –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É id
    post = get_object_or_404(Post,
                             id=post_id,
                             status=Post.Status.PUBLISHED)
    sent = False
    if request.method == 'POST':
        # –§–æ—Ä–º–∞ –±—ã–ª–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
        form = EmailPostForm(request.POST)
        if form.is_valid():
            # –ü–æ–ª—è —Ñ–æ—Ä–º—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é
            cd = form.cleaned_data
            post_url = request.build_absolute_uri(
                post.get_absolute_url())
            subject = f"{cd['name']} recommends you read " \
                      f"{post.title}"
            message = f"Read {post.title} at {post_url}\n\n" \
                      f"{cd['name']}\'s comments: {cd['comments']}"
            send_mail(subject, message, 'o1d.kuk@yandex.ru',
                      [cd['to']])
            sent = True
    else:
        form = EmailPostForm()
    return render(request, 'blog/post/share.html', {'post': post,
                                                    'form': form,
                                                    'sent': sent})


@require_POST # –ø—Ä–∞–∑—Ä–µ—à–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –º–µ—Ç–æ–¥–æ–º POST
def post_comment(request, post_id):
    post = get_object_or_404(Post,
                             id=post_id,
                             status=Post.Status.PUBLISHED) # –ø–æ–ª—É—á–∞—é –∫–æ–∫—Ä–µ—Ç–Ω—ã–π post –ø–æ is –∏ status –∏–∑ –±–¥
    comment = None # –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–Ω–æ–≥–æ –±–ª–æ–∫–∞ –ø—Ä–∏ –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏–∏
    # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
    form = CommentForm(data=request.POST) # —Å–æ–∑–¥–∞—ë—Ç—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä —Ñ–æ—Ä–º—ã, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ POST
    if form.is_valid():
        # –°–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Comment, –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—è –µ–≥–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        comment = form.save(commit=False) # —Ç—É—Ç —Å–æ–∑–¥–∞—ë—Ç—Å—è –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Comment, –ø–æ–∫–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –≤ –±–¥ –∏–∑-–∑–∞ commit=False
        # —Ç–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –æ–±—ä–µ–∫—Ç –ø–µ—Ä–µ–¥ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ –±–¥
        # –ø—Ä–∏ —Ç–æ–º –º–µ—Ç–æ–¥ save –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è ModelForm, –∏–±–æ —É —ç–∫–∑–µ–ø–ª—è—Ä–æ–≤ –∫–ª–∞—Å—Å–∞ Form –Ω–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π

        # –ù–∞–∑–Ω–∞—á–∏—Ç—å –ø–æ—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é
        comment.post = post # —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ —Å—á—ë—Ç –ø—Ä–æ–ø–∏—Å–∞–Ω–æ–≥–æ –≤ related_name –≤ –º–æ–¥–µ–ª–∏ Comment –≤ –ø–æ–ª–µ post
                            # related_name –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É –∏–ª–∏ –∂–µ
                            # –Ω–æ –≤–æ—Ç –Ω–∞—Ö—É—è –ø–æ—Å—Ç—É –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å –ø–æ—Å—Ç...–≤–∏–¥–∏–º–æ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é commtnt.post –ø—É—Å—Ç–æ–πü§î

        comment.save() # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    return render(request, 'blog/post/comment.html',
                  {'post': post,
                   'form': form,
                   'comment': comment})
